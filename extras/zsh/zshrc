# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
unsetopt beep
bindkey -e
# End of lines configured by zsh-newuser-install
zstyle :compinstall filename '/Users/ryan/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# Remove '/' and '.' from the list of characters in words so kill commands behave more like bash et al
export WORDCHARS=${WORDCHARS//(\.|\/)/}

bindkey ';5D' emacs-backward-word
bindkey ';5C' emacs-forward-word

setopt prompt_subst

source ~/ryscomacs/extras/zsh/zsh-colors.sh

# Replace dark blue because it's obnoxious on black
if [[ "$OSTYPE" == cygwin ]]; then
    printf %b '\e]4;4;#64'
fi

if [[ -f ~/.zsh-options ]]; then
    source ~/.zsh-options
fi

function SystemBlock
{
    echo -n "%K{023}%F{252}[%T %F{000}%n"

    if [ $SHOW_HOST ]; then
	echo -n "%F{252}@%m"
    fi

    echo -n "%F{252}]"
    echo
}

function VCBlock
{
    vcStart="%K{238}%F{015}"
    vcEnd=""
    
    git branch >/dev/null 2>/dev/null && echo "$vcStart Â± $vcEnd" && return
    hg root >/dev/null 2>/dev/null && echo "$vcStart â˜¿ $vcEnd" && return
    echo "%K{237} "
}

function PathBlock
{
    echo "%K{237}%F{252} %~"
}

promptCap=":"

PROMPT='$(SystemBlock)$(VCBlock)$(PathBlock)$promptCap%f%k '

if [ "`uname`" = "Darwin" ]; then
    alias dir='ls -G'
    alias redtoggle='pkill -USR1 redshift'
else
    alias dir='ls --color=auto'
fi

#
compdef -d svn

#
if [ "`uname`" = "Darwin" ]; then
    EDITOR=/Applications/Emacs.app/Contents/MacOS/bin/emacsclient
else
    EDITOR=emacsclient
fi

#
if [ -z $NO_HIGHLIGHT ]; then
    source ~/ryscomacs/extras/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

if [ -z $NO_AUTOSUGGESTIONS ]; then
    source ~/ryscomacs/extras/zsh/zsh-autosuggestions.zsh
fi

# SSH Setup
SSH_ENV="$HOME/.ssh/environment"

function start_ssh_agent {
    echo "Initialising new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    #/usr/bin/ssh-add;
}

if [[ "$OSTYPE" == cygwin ]]; then
    if type ssh-pageant > /dev/null; then
        if [[ -f ~/.agent.env ]]; then
            . ~/.agent.env -s > /dev/null
	    
            if ! kill -0 $SSH_PAGEANT_PID > /dev/null 2>&1; then
                ssh-pageant -s > ~/.agent.env
                . ~/.agent.env > /dev/null 2>&1
            fi
        else
            ssh-pageant -s > ~/.agent.env
            . ~/.agent.env > /dev/null 2>&1
        fi
    fi

elif [[ "$OSTYPE" == linux-gnu ]] && [ $USE_SSH_AGENT ]; then
    if [ -f "${SSH_ENV}" ]; then
	. "${SSH_ENV}" > /dev/null

	ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
            start_ssh_agent;
	}
    else
	start_ssh_agent;
    fi
fi
